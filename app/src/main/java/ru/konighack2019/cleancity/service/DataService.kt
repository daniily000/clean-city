package ru.konighack2019.cleancity.service

import android.net.Uri
import androidx.lifecycle.LiveData
import retrofit2.Call
import ru.konighack2019.cleancity.model.*

/**
 * Integrated Service for server API interaction and storing data to db.
 *
 */
interface DataService {
    var imageUri: Uri?
    /**
     * Fetches [KSEntry] info from server API and saves to local DB
     * @param id String with id of requested point
     * @return [KSEntry] from updated DB
     */
    fun getPointDetails(id: String): LiveData<KSEntry>
    /**
     * Fetches all KS reports that were previously sent from app and saved into local db.
     * @return List<[KSEntry]> containing all reports
     */
    fun getKSEntries(): LiveData<List<KSEntry>>
    /**
     * Fetches all KS reports that were previously sent from app and saved into local db.
     * @return List<[EsooEntry]> containing all reports
     */
    fun getEsooEntries(): LiveData<List<EsooEntry>>
    /**
     * Posts Report to server API and saves result in DB.
     * @param report [Report] to be posted
     * @return String with Id, generated by the server or null if posting failed
     */
    suspend fun postReport(report: Report): String
    /**
     * Fetches User information stored in a local db
     * @return [UserInfo] from local DB
     */
    fun getUserInfo(): LiveData<UserInfo>
    /**
     * Stores [UserInfo] in local db
     * @param userInfo [UserInfo] to store
     */
    fun saveUserInfo(userInfo: UserInfo)
    /**
     * TESTING implementation: Method for Test Server only. Flushes current remote db
     */
    fun flushPoints(): Call<Void>

    fun getUserInfoBlocking(): UserInfo
}
